MTD COMPETATIVE PROGRAMMING TRAINING
DAY 1 THURSDAY 06-03-2025

IMPORTANT GIHTUB COMMANDS 

git status //to know the current status of our repo

git clone https://github.com/VIKAS2504/mtd_c_py  //to download the repo

git pull origin main //to download the updated repo from the server to the local machine

//to  make our computer recognise our git account, we must run these 2 commands:
git config --global user.name "VIKAS2504"
git config --global user.email "bmvikas25@gmail.com"

git clone https://<PAT>@github.com/VIKAS2504/mtd_c_py 

git add . //git will mark(stage) all files that need to be updated 
git commit -m "notes file of the mtd training is added" //creates an object that will include all the files to be uploaded and also it is secured(encryption)
git push origin main // 

gcc filename.c//to compile the program        
a.exe//to run the code

//type casting
float num = 11 / 3;
printf("%f",num);

DAY 2 FRIDAY 07-03-2025

Arithmetic operators : + - * / %
All the binary operators
I/P are numbers
O/P is number
Used with Infix notation
To perform any arithmetic operation,DT of both the operands must be same 
Left to right associativity w.r.t reading the values/expressions
For the calculations to happen,the user/programmer given infix expression must be converted to postfix
The operators have different hierarchy(precedence)
--------------------------------------------------------------------------------------------------------------------
Relational opearators: > < == != >= <= 

for(int i=1;i<=10;i++)
for(int i=1;i<11;i++)
--------------------------------------
Logical operators : | & ~ ~& ~|
------------------------------------------------------------

DAY4 13-03-2025
 
range(10)
range(2, 10)
range(1, 10, 3)
range(10, -5, -2)

---------------------------------

1.input string

3.remove duplicate digits
4.form biggest using even numbers

API key = 954556534102e5c8d066cfc95ca84874
------------------------------------------------------------
DAY5
NAME    ORDERED    MUTABLE   DEFINITION
List    Yes         Yes      Is a DS in which elements
                             are stored consecutively
Tuple   Yes         No       It is read only list
Set     No          
